{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/navbar-row.html","webpack:///src/app/app.module.ts","webpack:///src/app/revision.service.ts","webpack:///src/app/ver-gen/ver-gen.component.ts","webpack:///src/app/ver-gen/ver-gen.component.html","webpack:///src/app/ver-register/ver-register.component.ts","webpack:///src/app/ver-register/ver-register.component.html","webpack:///src/app/ver-register/register-dialog.html","webpack:///src/app/version.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","NavrowComponent","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","RevisionService","http","revUrl","sn","url","get","num","options","params","providedIn","VerErrors","VerGenComponent","verService","revService","versions","revisions","getVersions","subscribe","getRevisions","version","buildInfo","logFrom","logTo","build","ver","info","generate","button","document","getElementById","disabled","waitFinished","error","status","IN_PROCESSING_STATUS","pipe","FAILURE_STATUS","waitFinErrHandle","result","location","assign","alert","VerRegisterComponent","dialog","lastScrollTop","revList","getSomeRevs","rev","ref","open","RegisterDialog","width","afterClosed","undefined","vsn","addVersion","removeVersion","concat","msg","console","log","event","target","offsetHeight","scrollTop","scrollHeight","lastSn","length","height","onScroll","dialogRef","close","onCancel","VersionService","verUrl","httpOptions","headers","put","post","genUrl","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Version Manager';\n}\n\n@Component({\n    selector: 'navbar-row',\n    templateUrl: './navbar-row.html',\n    styleUrls: ['./navbar-row.css']\n})\nexport class NavrowComponent { }\n","<navbar-row></navbar-row>\n<mat-grid-list cols=\"10\" rowHeight=\"1:1\">\n\n  <mat-grid-tile [colspan]='5' [rowspan]='6'>\n  <app-ver-register></app-ver-register>\n  </mat-grid-tile>\n\n  <mat-grid-tile [colspan]='2' [rowspan]='3'>\n  <app-ver-gen></app-ver-gen>\n  </mat-grid-tile>\n\n</mat-grid-list>\n","<mat-toolbar class=\"mat-elevation-z5\" color=\"primary\">\n  Version Manager\n</mat-toolbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent, NavrowComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { VerGenComponent } from './ver-gen/ver-gen.component';\nimport { VerRegisterComponent, RegisterDialog } from './ver-register/ver-register.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        VerGenComponent,\n        RegisterDialog,\n        NavrowComponent,\n        VerRegisterComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatListModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatInputModule,\n        MatSelectModule,\n        MatGridListModule,\n        MatToolbarModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Revision } from './revision';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RevisionService {\n\n    private revUrl = 'manager/api/revisions';\n\n    constructor(private http: HttpClient) { }\n\n    getRevision(sn: string): Observable<Revision> {\n        const url = `${this.revUrl}/${sn}`;\n        return this.http.get<Revision>(url);\n    }\n\n    getRevisions(): Observable<Revision[]> {\n        return this.http.get<Revision[]>(this.revUrl);\n    }\n\n    getSomeRevs(sn: string | null, num: number): Observable<Revision[]> {\n        const url: string = sn != null ? `${this.revUrl}/${sn}/getSomeRevsFrom` :\n            `${this.revUrl}/getSomeRevs`;\n        const options = { params: { num: `${num}` } };\n        return this.http.get<Revision[]>(url, options);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, delay } from 'rxjs/operators';\nimport { throwError } from 'rxjs/index';\n\nimport { VersionService } from '../version.service';\nimport { RevisionService } from '../revision.service';\nimport { Version, VersionBuild, BuildInfo } from '../version';\nimport { Revision } from '../revision';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nenum VerErrors {\n    IN_PROCESSING_STATUS = 0,\n    FAILURE_STATUS = 1\n}\n\n@Component({\n    selector: 'app-ver-gen',\n    templateUrl: './ver-gen.component.html',\n    styleUrls: ['./ver-gen.component.css']\n})\nexport class VerGenComponent implements OnInit {\n\n    versions: Version[] = [];\n    revisions: Revision[] = [];\n\n    constructor(\n        private verService: VersionService,\n        private revService: RevisionService\n    ) { }\n\n    ngOnInit(): void {\n        this.verService.getVersions()\n            .subscribe(versions => this.versions = versions);\n        this.revService.getRevisions()\n            .subscribe(revisions => this.revisions = revisions);\n    }\n\n    generate(version: Version | undefined, ...infos: string[]): void {\n        let buildInfo: BuildInfo = {};\n\n        if (typeof version !== 'undefined') {\n\n            if (infos.length === 2) {\n                buildInfo = { logFrom: infos[0], logTo: infos[1] };\n            }\n\n            const build: VersionBuild = { ver: version, info: buildInfo };\n            this.verService.generate(build)\n                .subscribe(() => {\n                    /* Disable genbutton */\n                    const button: HTMLButtonElement =\n                        document.getElementById('genButton') as HTMLButtonElement;\n                    button.disabled = true;\n\n                    this.waitFinished(version);\n                });\n        }\n    }\n\n    private waitFinErrHandle(error: HttpErrorResponse) {\n        if (error.status === 304) {\n            /* Version generation is in processing */\n            return of(VerErrors.IN_PROCESSING_STATUS).pipe(delay(3000));\n        } else if (error.status === 400) {\n            return of(VerErrors.FAILURE_STATUS);\n        }\n    }\n\n    waitFinished(version: Version): void {\n        this.verService.waitFinished(version)\n            .pipe(catchError(this.waitFinErrHandle))\n            .subscribe(result => {\n                if (typeof result === 'string') {\n                    /* enable button */\n                    const button: HTMLButtonElement =\n                        document.getElementById('genButton') as HTMLButtonElement;\n                    button.disabled = false;\n\n                    location.assign(result);\n                } else {\n                    const status = result as VerErrors;\n                    switch (status) {\n                        case VerErrors.IN_PROCESSING_STATUS:\n                            this.waitFinished(version);\n                            break;\n                        case VerErrors.FAILURE_STATUS:\n                            alert('Generation Failed');\n                            break;\n                    }\n                }\n            });\n    }\n}\n","<div id=\"VerGenPanel\" class=\"mat-elevation-z5\">\n    <h3>Version Generate</h3>\n\n    <mat-list>\n\n      <mat-list-item>\n        <mat-form-field>\n          <mat-label>Version</mat-label>\n          <mat-select #SelectedVersion>\n            <mat-option *ngFor=\"let version of versions\" [value]=\"version\">\n              {{version.vsn}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-list-item>\n\n      <mat-list-item>\n        <mat-form-field>\n          <mat-label>Log from</mat-label>\n          <mat-select #logFrom>\n            <mat-option *ngFor=\"let revision of revisions\" [value]=\"revision.sn\">\n              {{revision.sn}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-list-item>\n\n      <mat-list-item>\n        <mat-form-field>\n          <mat-label>Log from</mat-label>\n          <mat-select #logTo>\n            <mat-option *ngFor=\"let revision of revisions\" [value]=\"revision.sn\">\n              {{revision.sn}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-list-item>\n\n      <mat-list-item>\n        <button id=\"genButton\" mat-flat-button color=\"primary\"\n                (click)=\"generate(SelectedVersion.value, logFrom.value, logTo.value)\">\n          Generate\n        </button>\n      </mat-list-item>\n    </mat-list>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VersionService } from '../version.service';\nimport { RevisionService } from '../revision.service';\nimport { Version } from '../version';\nimport { Revision } from '../revision';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SlicePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-ver-register',\n    templateUrl: './ver-register.component.html',\n    styleUrls: ['./ver-register.component.css']\n})\nexport class VerRegisterComponent implements OnInit {\n\n    versions: Version[] = [];\n    revisions: Revision[] = [];\n\n    lastScrollTop: number = 0;\n    revList: HTMLElement | null = null;\n\n    constructor(private verService: VersionService,\n        private revService: RevisionService,\n        private dialog: MatDialog) { }\n\n    ngOnInit(): void {\n        this.getVersions();\n        this.getSomeRevs(null, 20);\n    }\n\n    register(rev: string): void {\n        const ref = this.dialog.open(RegisterDialog, {\n            width: '250px'\n        });\n\n        ref.afterClosed().subscribe(result => {\n            if (result !== undefined) {\n                const ver: Version = { vsn: result, sn: rev };\n                this.verService.addVersion(ver)\n                    .subscribe();\n            }\n        });\n    }\n\n    remove(ver: Version): void {\n        this.verService.removeVersion(ver.vsn)\n            .subscribe();\n    }\n\n    getVersions(): void {\n        this.verService.getVersions()\n            .subscribe(versions => this.versions = versions);\n    }\n\n    getRevisions(): void {\n        this.revService.getRevisions()\n            .subscribe(revisions => this.revisions = revisions);\n    }\n\n    getSomeRevs(sn: string | null, num: number): void {\n        this.revService.getSomeRevs(sn, num)\n            .subscribe(revisions => this.revisions = this.revisions.concat(revisions));\n    }\n\n    logging(msg: string): void {\n        console.log(msg);\n    }\n\n    onScroll(event: any): void {\n        // visible height + pixel scrolled >= total height\n        if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight) {\n            let lastSn: Revision = this.revisions[this.revisions.length - 1];\n            this.revService.getSomeRevs(lastSn.sn, 10)\n                .subscribe(revisions => {\n                    const height: number = event.target.scrollHeight;\n                    this.revisions = this.revisions.concat(revisions);\n                });\n        }\n    }\n}\n\n@Component({\n    selector: 'register-dialog',\n    templateUrl: 'register-dialog.html'\n})\nexport class RegisterDialog {\n\n    public version: string;\n\n    constructor(\n        public dialogRef: MatDialogRef<RegisterDialog>) { }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n}\n","<div id=\"RegPanel\" class=\"mat-elevation-z5\">\n  <h3 class=\"registerTitle\">Version Register</h3>\n  <mat-action-list id=\"revList\" (scroll)=\"onScroll($event)\">\n    <mat-list *ngFor=\"let revision of revisions\" class=\"mat-elevation-z2\">\n      <button class=\"revButton\" (click)=\"register(revision.sn)\">\n        <a>{{revision.comment | slice: 0:40}}</a>\n      </button>\n    </mat-list>\n  </mat-action-list>\n</div>\n","<h1 mat-dialog-title>Version Register</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <p>Version Identity?</p>\n    <input matInput [(ngModel)]=\"version\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancel()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"version\">Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Version, VersionBuild } from './version';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VersionService {\n\n    private verUrl = 'manager/api/versions';\n\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    getVersion(vsn: string): Observable<Version> {\n        const url = `${this.verUrl}/${vsn}/`;\n        return this.http.get<Version>(url);\n    }\n\n    getVersions(): Observable<Version[]> {\n        return this.http.get<Version[]>(`${this.verUrl}/`);\n    }\n\n    updateVersion(ver: Version): Observable<any> {\n        return this.http.put(`${this.verUrl}/`, ver, this.httpOptions);\n    }\n\n    removeVersion(vsn: string): Observable<Version> {\n        const url = `${this.verUrl}/${vsn}/`;\n        return this.http.delete<Version>(url, this.httpOptions);\n    }\n\n    addVersion(ver: Version): Observable<Version> {\n        return this.http.post<Version>(`${this.verUrl}/`, ver, this.httpOptions);\n    }\n\n    generate(build: VersionBuild): Observable<any> {\n        const genUrl = `${this.verUrl}/${build.ver.vsn}/generate/`;\n        return this.http.put(genUrl, build.info, this.httpOptions);\n    }\n\n    waitFinished(version: Version): Observable<string> {\n        const url = `${this.verUrl}/${version.vsn}/gen_status_query/`;\n        return this.http.post<string>(url, {}, this.httpOptions);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}