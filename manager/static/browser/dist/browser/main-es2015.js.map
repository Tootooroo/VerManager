{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/navbar-row.html","./src/app/app.module.ts","./src/app/revision.service.ts","./src/app/ver-gen/ver-gen.component.ts","./src/app/ver-gen/ver-gen.component.html","./src/app/ver-register/ver-register.component.ts","./src/app/ver-register/ver-register.component.html","./src/app/ver-register/register-dialog.html","./src/app/version.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Version Manager';\n}\n\n@Component({\n    selector: 'navbar-row',\n    templateUrl: './navbar-row.html',\n    styleUrls: ['./navbar-row.css']\n})\nexport class NavrowComponent { }\n","<navbar-row></navbar-row>\n<mat-grid-list cols=\"10\" rowHeight=\"1:1\">\n\n  <mat-grid-tile [colspan]='5' [rowspan]='6'>\n  <app-ver-register></app-ver-register>\n  </mat-grid-tile>\n\n  <mat-grid-tile [colspan]='2' [rowspan]='3'>\n  <app-ver-gen></app-ver-gen>\n  </mat-grid-tile>\n\n</mat-grid-list>\n","<mat-toolbar class=\"mat-elevation-z5\" color=\"primary\">\n  Version Manager\n</mat-toolbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent, NavrowComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { VerGenComponent } from './ver-gen/ver-gen.component';\nimport { VerRegisterComponent, RegisterDialog } from './ver-register/ver-register.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        VerGenComponent,\n        RegisterDialog,\n        NavrowComponent,\n        VerRegisterComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatListModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatInputModule,\n        MatSelectModule,\n        MatGridListModule,\n        MatToolbarModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Revision } from './revision';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RevisionService {\n\n    private revUrl = 'manager/api/revisions';\n\n    constructor(private http: HttpClient) { }\n\n    getRevision(sn: string): Observable<Revision> {\n        const url = `${this.revUrl}/${sn}`;\n        return this.http.get<Revision>(url);\n    }\n\n    getRevisions(): Observable<Revision[]> {\n        return this.http.get<Revision[]>(this.revUrl);\n    }\n\n    getSomeRevs(sn: string | null, num: number): Observable<Revision[]> {\n        const url: string = sn != null ? `${this.revUrl}/${sn}/getSomeRevsFrom` :\n            `${this.revUrl}/getSomeRevs`;\n        const options = { params: { num: `${num}` } };\n        return this.http.get<Revision[]>(url, options);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, delay } from 'rxjs/operators';\nimport { throwError } from 'rxjs/index';\n\nimport { VersionService } from '../version.service';\nimport { RevisionService } from '../revision.service';\nimport { Version, VersionBuild, BuildInfo } from '../version';\nimport { Revision } from '../revision';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nenum VerErrors {\n    IN_PROCESSING_STATUS = 0,\n    FAILURE_STATUS = 1\n}\n\n@Component({\n    selector: 'app-ver-gen',\n    templateUrl: './ver-gen.component.html',\n    styleUrls: ['./ver-gen.component.css']\n})\nexport class VerGenComponent implements OnInit {\n\n    versions: Version[] = [];\n    revisions: Revision[] = [];\n\n    constructor(\n        private verService: VersionService,\n        private revService: RevisionService\n    ) { }\n\n    ngOnInit(): void {\n        this.verService.getVersions()\n            .subscribe(versions => this.versions = versions);\n        this.revService.getRevisions()\n            .subscribe(revisions => this.revisions = revisions);\n    }\n\n    generate(version: Version | undefined, ...infos: string[]): void {\n        let buildInfo: BuildInfo = {};\n\n        if (typeof version !== 'undefined') {\n\n            if (infos.length === 2) {\n                buildInfo = { logFrom: infos[0], logTo: infos[1] };\n            }\n\n            const build: VersionBuild = { ver: version, info: buildInfo };\n            this.verService.generate(build)\n                .subscribe(() => {\n                    /* Disable genbutton */\n                    const button: HTMLButtonElement =\n                        document.getElementById('genButton') as HTMLButtonElement;\n                    button.disabled = true;\n\n                    this.waitFinished(version);\n                });\n        }\n    }\n\n    private waitFinErrHandle(error: HttpErrorResponse) {\n        if (error.status === 304) {\n            /* Version generation is in processing */\n            return of(VerErrors.IN_PROCESSING_STATUS).pipe(delay(3000));\n        } else if (error.status === 400) {\n            return of(VerErrors.FAILURE_STATUS);\n        }\n    }\n\n    waitFinished(version: Version): void {\n        this.verService.waitFinished(version)\n            .pipe(catchError(this.waitFinErrHandle))\n            .subscribe(result => {\n                if (typeof result === 'string') {\n                    /* enable button */\n                    const button: HTMLButtonElement =\n                        document.getElementById('genButton') as HTMLButtonElement;\n                    button.disabled = false;\n\n                    location.assign(result);\n                } else {\n                    const status = result as VerErrors;\n                    switch (status) {\n                        case VerErrors.IN_PROCESSING_STATUS:\n                            this.waitFinished(version);\n                            break;\n                        case VerErrors.FAILURE_STATUS:\n                            alert('Generation Failed');\n                            break;\n                    }\n                }\n            });\n    }\n}\n","<div id=\"VerGenPanel\" class=\"mat-elevation-z5\">\n    <h3>Version Generate</h3>\n\n    <mat-list>\n\n      <mat-list-item>\n        <mat-form-field>\n          <mat-label>Version</mat-label>\n          <mat-select #SelectedVersion>\n            <mat-option *ngFor=\"let version of versions\" [value]=\"version\">\n              {{version.vsn}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-list-item>\n\n      <mat-list-item>\n        <mat-form-field>\n          <mat-label>Log from</mat-label>\n          <mat-select #logFrom>\n            <mat-option *ngFor=\"let revision of revisions\" [value]=\"revision.sn\">\n              {{revision.sn}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-list-item>\n\n      <mat-list-item>\n        <mat-form-field>\n          <mat-label>Log from</mat-label>\n          <mat-select #logTo>\n            <mat-option *ngFor=\"let revision of revisions\" [value]=\"revision.sn\">\n              {{revision.sn}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-list-item>\n\n      <mat-list-item>\n        <button id=\"genButton\" mat-flat-button color=\"primary\"\n                (click)=\"generate(SelectedVersion.value, logFrom.value, logTo.value)\">\n          Generate\n        </button>\n      </mat-list-item>\n    </mat-list>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { VersionService } from '../version.service';\nimport { RevisionService } from '../revision.service';\nimport { Version } from '../version';\nimport { Revision } from '../revision';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SlicePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-ver-register',\n    templateUrl: './ver-register.component.html',\n    styleUrls: ['./ver-register.component.css']\n})\nexport class VerRegisterComponent implements OnInit {\n\n    versions: Version[] = [];\n    revisions: Revision[] = [];\n\n    lastScrollTop: number = 0;\n    revList: HTMLElement | null = null;\n\n    constructor(private verService: VersionService,\n        private revService: RevisionService,\n        private dialog: MatDialog) { }\n\n    ngOnInit(): void {\n        this.getVersions();\n        this.getSomeRevs(null, 20);\n    }\n\n    register(rev: string): void {\n        const ref = this.dialog.open(RegisterDialog, {\n            width: '250px'\n        });\n\n        ref.afterClosed().subscribe(result => {\n            if (result !== undefined) {\n                const ver: Version = { vsn: result, sn: rev };\n                this.verService.addVersion(ver)\n                    .subscribe();\n            }\n        });\n    }\n\n    remove(ver: Version): void {\n        this.verService.removeVersion(ver.vsn)\n            .subscribe();\n    }\n\n    getVersions(): void {\n        this.verService.getVersions()\n            .subscribe(versions => this.versions = versions);\n    }\n\n    getRevisions(): void {\n        this.revService.getRevisions()\n            .subscribe(revisions => this.revisions = revisions);\n    }\n\n    getSomeRevs(sn: string | null, num: number): void {\n        this.revService.getSomeRevs(sn, num)\n            .subscribe(revisions => this.revisions = this.revisions.concat(revisions));\n    }\n\n    logging(msg: string): void {\n        console.log(msg);\n    }\n\n    onScroll(event: any): void {\n        // visible height + pixel scrolled >= total height\n        if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight) {\n            let lastSn: Revision = this.revisions[this.revisions.length - 1];\n            this.revService.getSomeRevs(lastSn.sn, 10)\n                .subscribe(revisions => {\n                    const height: number = event.target.scrollHeight;\n                    this.revisions = this.revisions.concat(revisions);\n                });\n        }\n    }\n}\n\n@Component({\n    selector: 'register-dialog',\n    templateUrl: 'register-dialog.html'\n})\nexport class RegisterDialog {\n\n    public version: string;\n\n    constructor(\n        public dialogRef: MatDialogRef<RegisterDialog>) { }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n}\n","<div id=\"RegPanel\" class=\"mat-elevation-z5\">\n  <h3 class=\"registerTitle\">Version Register</h3>\n  <mat-action-list id=\"revList\" (scroll)=\"onScroll($event)\">\n    <mat-list *ngFor=\"let revision of revisions\" class=\"mat-elevation-z2\">\n      <button class=\"revButton\" (click)=\"register(revision.sn)\">\n        <a>{{revision.comment | slice: 0:40}}</a>\n      </button>\n    </mat-list>\n  </mat-action-list>\n</div>\n","<h1 mat-dialog-title>Version Register</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <p>Version Identity?</p>\n    <input matInput [(ngModel)]=\"version\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancel()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"version\">Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Version, VersionBuild } from './version';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VersionService {\n\n    private verUrl = 'manager/api/versions';\n\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    getVersion(vsn: string): Observable<Version> {\n        const url = `${this.verUrl}/${vsn}/`;\n        return this.http.get<Version>(url);\n    }\n\n    getVersions(): Observable<Version[]> {\n        return this.http.get<Version[]>(`${this.verUrl}/`);\n    }\n\n    updateVersion(ver: Version): Observable<any> {\n        return this.http.put(`${this.verUrl}/`, ver, this.httpOptions);\n    }\n\n    removeVersion(vsn: string): Observable<Version> {\n        const url = `${this.verUrl}/${vsn}/`;\n        return this.http.delete<Version>(url, this.httpOptions);\n    }\n\n    addVersion(ver: Version): Observable<Version> {\n        return this.http.post<Version>(`${this.verUrl}/`, ver, this.httpOptions);\n    }\n\n    generate(build: VersionBuild): Observable<any> {\n        const genUrl = `${this.verUrl}/${build.ver.vsn}/generate/`;\n        return this.http.put(genUrl, build.info, this.httpOptions);\n    }\n\n    waitFinished(version: Version): Observable<string> {\n        const url = `${this.verUrl}/${version.vsn}/gen_status_query/`;\n        return this.http.post<string>(url, {}, this.httpOptions);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}